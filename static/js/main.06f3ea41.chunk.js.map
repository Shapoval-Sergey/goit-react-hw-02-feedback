{"version":3,"sources":["components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/Notification/Notification.js","components/Statistics/Statistics.js","components/App.js","index.js","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["Section","title","children","defaultProps","FeedbackOptions","options","onLeaveFeedback","map","typeBtn","key","type","className","s","button","onClick","Notification","message","Statistics","good","neutral","bad","total","positivePercentage","App","state","updateState","setState","countPositiveFeedbackPercentage","Math","round","countTotalFeedback","Object","values","this","reduce","acc","stat","keys","Component","ReactDOM","render","document","querySelector","module","exports"],"mappings":"gPAGMA,EAAU,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,oCACE,4BAAKD,GACJC,IAKPF,EAAQG,aAAe,CACrBF,MAAO,iBAOMD,Q,gBCOAI,EAtBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,6BACGD,EAAQE,KAAI,SAACC,GAAD,OACX,4BACEC,IAAKD,EACLE,KAAK,SACLC,UAAWC,IAAEC,OACbC,QAAS,kBAAMR,EAAgBE,KAE9BA,QCLIO,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OACE,oCACE,2BAAIA,KCiBKC,EAlBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,oCACGD,EAAQ,GACP,oCACE,oCAAUH,GACV,uCAAaC,GACb,mCAASC,GACT,qCAAWC,GACX,kDAAwBC,EAAxB,OAIFD,GAAS,kBAAC,EAAD,CAAcL,QAAQ,wBCTlBO,G,kNACnBC,MAAQ,CACNN,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPK,YAAc,SAACjB,GACb,EAAKkB,UAAS,SAACF,GACb,OAAO,eACJhB,EAAUgB,EAAMhB,GAAW,O,EAYlCmB,gCAAkC,WAIhC,OAHmBC,KAAKC,MACH,IAAlB,EAAKL,MAAMN,KAAc,EAAKY,uB,mEARjC,OAAOC,OAAOC,OAAOC,KAAKT,OAAOU,QAAO,SAACC,EAAKC,GAE5C,OADAD,GAAOC,IAEN,K,+BAWH,OACE,oCACE,kBAAC,EAAD,CAASnC,MAAM,yBACb,kBAAC,EAAD,CACEI,QAAS0B,OAAOM,KAAKJ,KAAKT,OAC1BlB,gBAAiB2B,KAAKR,eAG1B,kBAAC,EAAD,CAASxB,MAAM,cACb,kBAAC,EAAD,CACEiB,KAAMe,KAAKT,MAAMN,KACjBC,QAASc,KAAKT,MAAML,QACpBC,IAAKa,KAAKT,MAAMJ,IAChBC,MAAOY,KAAKH,qBACZR,mBAAoBW,KAAKN,0C,GA5CJW,cCJjCC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,cAAc,W,kBCHhDC,EAAOC,QAAU,CAAC,OAAS,kC","file":"static/js/main.06f3ea41.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </>\r\n  );\r\n};\r\n\r\nSection.defaultProps = {\r\n  title: \"Section Title\",\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n};\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport s from \"./FeedbackOptions.module.css\";\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return (\r\n    <div>\r\n      {options.map((typeBtn) => (\r\n        <button\r\n          key={typeBtn}\r\n          type=\"submit\"\r\n          className={s.button}\r\n          onClick={() => onLeaveFeedback(typeBtn)}\r\n        >\r\n          {typeBtn}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.array.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from \"react\";\r\n\r\nconst Notification = ({ message }) => {\r\n  return (\r\n    <>\r\n      <p>{message}</p>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\n","import React from \"react\";\r\n\r\nimport Notification from \"../Notification/Notification\";\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <>\r\n      {total > 0 && (\r\n        <>\r\n          <p>Good: {good}</p>\r\n          <p>Neutral: {neutral}</p>\r\n          <p>Bad: {bad}</p>\r\n          <p>Total: {total}</p>\r\n          <p>Positive feedbacks: {positivePercentage}%</p>\r\n        </>\r\n      )}\r\n\r\n      {!total && <Notification message=\"No feedback given\" />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Statistics;\r\n","import React, { Component } from \"react\";\r\n\r\nimport Section from \"./Section/Section\";\r\nimport FeedbackOptions from \"./FeedbackOptions/FeedbackOptions\";\r\nimport Statistics from \"./Statistics/Statistics\";\r\n\r\nimport \"./styles.css\";\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  updateState = (typeBtn) => {\r\n    this.setState((state) => {\r\n      return {\r\n        [typeBtn]: state[typeBtn] + 1,\r\n      };\r\n    });\r\n  };\r\n\r\n  countTotalFeedback() {\r\n    return Object.values(this.state).reduce((acc, stat) => {\r\n      acc += stat;\r\n      return acc;\r\n    }, 0);\r\n  }\r\n\r\n  countPositiveFeedbackPercentage = () => {\r\n    const percentage = Math.round(\r\n      (this.state.good * 100) / this.countTotalFeedback()\r\n    );\r\n    return percentage;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Section title=\"Please leave feedback\">\r\n          <FeedbackOptions\r\n            options={Object.keys(this.state)}\r\n            onLeaveFeedback={this.updateState}\r\n          />\r\n        </Section>\r\n        <Section title=\"Statistics\">\r\n          <Statistics\r\n            good={this.state.good}\r\n            neutral={this.state.neutral}\r\n            bad={this.state.bad}\r\n            total={this.countTotalFeedback()}\r\n            positivePercentage={this.countPositiveFeedbackPercentage()}\r\n          />\r\n        </Section>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.querySelector(\"#root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__4Tw3j\"};"],"sourceRoot":""}